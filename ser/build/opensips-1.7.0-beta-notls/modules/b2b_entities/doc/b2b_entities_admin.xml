<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		The B2BUA implementation in OpenSIPS is separated in two layers:
			<itemizedlist>
			<listitem>
		a lower one(coded in this module)- which implements the basic functions of a UAS and UAC
			</listitem>
			<listitem>
		a upper one - which represents the logic engine of B2BUA, responsible of actually
			implementing the B2BUA services using the functions offered by the low level.
			</listitem>
	</itemizedlist>

		This module stores records corresponding to the dialogs in which the B2BUA
		is involved. It exports an API to be called from other modules which offers functions for
		creating a new dialog record, for sending requests or replies in one dialog and will also
		notify the upper level module when a request or reply is received inside one stored dialog.

		The records are separated in two types: b2b server entities and b2b client entities depending
		on the mode they are created. An entity created for a received initial message will be a server entity,
		while a entity that will send an initial request(create a new dialog) will be a b2b client entity.
		The name corresponds to the behavior in the first transaction - if UAS - server entity and if UAC - client entity.

		This module does not implement a B2BUA alone, but needs a B2B logic implementing module.
	</para>
	<para>
		The module is able to respond to authentication challanges if the
		uac_auth module is loaded first.  The list of credentials for
		b2b authentication is also provided by the uac_auth module.
	</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>tm</emphasis>
			</para>
			</listitem>
			<listitem>
			<para>
				<emphasis>a db module</emphasis>
			</para>
			</listitem>
			<listitem>
			<para>
				<emphasis>uac_auth</emphasis>
				(mandatory if authentication is required)
			</para>
			</listitem>
			</itemizedlist>
	</section>
	
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&osips; with this module loaded:
		</para>
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>none</emphasis>
			</para>
			</listitem>
			</itemizedlist>
	</section>
	</section>

	<section>
		<title>Exported Parameters</title>
	<section>
		<title><varname>server_hsize</varname> (int)</title>
		<para>
			The size of the hash table that stores the b2b server entities.
			It is the 2 logarithmic value of the real size.
		</para>
		<para>
		<emphasis>Default value is <quote>9</quote>
		</emphasis>
		 (512 records).
		</para>
		<example>
		<title>Set <varname>server_hsize</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "server_hsize", 10)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>client_hsize</varname> (int)</title>
		<para>
			The size of the hash table that stores the b2b client entities.
			It is the 2 logarithmic value of the real size.
		</para>
		<para>
		<emphasis>Default value is <quote>9</quote>
		</emphasis>
		 (512 records).
		</para>
		<example>
		<title>Set <varname>client_hsize</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "client_hsize", 10)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>script_req_route</varname> (str)</title>
		<para>
			The name of the b2b script route that will be called when
			B2B requests are received.
		</para>
		<example>
		<title>Set <varname>script_req_route</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "script_req_route", "b2b_request")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>script_reply_route</varname> (str)</title>
		<para>
			The name of the b2b script route that will be called when
			B2B replies are received.
		</para>
		<example>
		<title>Set <varname>script_repl_route</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "script_reply_route", "b2b_reply")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>db_url</varname> (str)</title>
		<para>
			Database URL. It is not compulsory, if not set
			data is not stored in database.
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "db_url", "mysql://opensips:opensipsrw@127.0.0.1/opensips")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>update_period</varname> (int)</title>
		<para>
			The time interval at which to update the info in database.
		</para>
		<para>
		<emphasis>Default value is <quote>100</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname>update_period</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "update_period", 60)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>b2b_key_prefix</varname> (string)</title>
		<para>
			The string to use when generating the key ( it is inserted
			in the SIP messages as callid or to tag. It is useful to set
			this prefix if you use more instances of opensips B2BUA cascaded
			in the same architecture. Sometimes opensips B2BUA looks at the
			callid or totag to see if it has the format it uses to determine
			if the request was sent by it.
		</para>
		<para>
		<emphasis>Default value is <quote>B2B</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname>b2b_key_prefix</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "b2b_key_prefix", "B2B1")
...
	</programlisting>
		</example>
	</section>
	<section>
		<title><varname>db_mode</varname> (int)</title>
		<para>
			The B2B modules have support for the 3 type of database storage
		</para>
		<para>
		<itemizedlist>
				<listitem>NO DB STORAGE - set this parameter to 0</listitem>
				<listitem>WRITE THROUGH (synchronous write in database) - set this parameter to 1</listitem>
				<listitem>WRITE BACK (update in db from time to time) - set this parameter to 2</listitem>
		</itemizedlist>
		</para>
		<para>
		<emphasis>Default value is <quote>2</quote> (WRITE BACK).</emphasis>
		</para>
		<example>
		<title>Set <varname>db_mode</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "db_mode", 1)
...
	</programlisting>
		</example>
	</section>

</section>


	<section>
		<title>Exported Functions</title>
		<para>The module does not export functions to be used
		in configuration script.</para>
	</section>

</chapter>

